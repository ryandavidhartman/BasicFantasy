# Routes
# This file defines all application routes (Higher priority routes first)
# https://www.playframework.com/documentation/latest/ScalaRouting
# ~~~~

# An example controller showing a sample home page
GET     /                      controllers.HomeController.index()

# Map static resources from the /public folder to the /assets URL path
GET     /assets/*file          controllers.Assets.versioned(path="/public", file: Asset)

# spell ui routing
GET     /spells                controllers.SpellController.getSpellsPage(name: Option[String], range: Option[String], cleric: Option[Int], magicUser: Option[Int], duration: Option[String], description: Option[String], alignment: Option[String])
GET     /spells/list           controllers.SpellController.getListPage()
GET     /spells/create         controllers.SpellController.createSpellPage()
POST    /spells/create         controllers.SpellController.createSpell()
GET     /spells/update/:id     controllers.SpellController.updateSpellPage(id: String)
GET     /spells/view/:id       controllers.SpellController.viewSpellPage(id: String)
POST    /spells/update         controllers.SpellController.updateSpell()

# spell api routing
GET     /v1/api/spells         controllers.SpellController.get(name: Option[String], range: Option[String], cleric: Option[Int], magicUser: Option[Int], duration: Option[String], description: Option[String], alignment: Option[String])
GET     /v1/api/spells/list    controllers.SpellController.list()
POST    /v1/api/spells         controllers.SpellController.create()
PUT     /v1/api/spells/:id     controllers.SpellController.update(id: String)
DELETE  /v1/api/spells/:id     controllers.SpellController.delete(id: String)


# name ui routing
GET    /names                  controllers.NameController.getNamesPage(name: Option[String],firstName: Option[Boolean], lastName: Option[Boolean], gender: Option[String], race: Option[String])

# name api routing
GET   /v1/api/names            controllers.NameController.get(name: Option[String],firstName: Option[Boolean], lastName: Option[Boolean], gender: Option[String], race: Option[String])
GET   /v1/api/names/random/:gender/:race controllers.NameController.getRandom(gender: String, race: String)
POST  /v1/api/names            controllers.NameController.create()
POST  /v1/api/names/bulk       controllers.NameController.createBulk()

# personality
GET  /v1/api/personalities      controllers.PersonalityController.get(name: Option[String], description: Option[String], alignment: Option[String], limit: Option[Int])
GET  /v1/api/personalities/random/:alignment controllers.PersonalityController.getRandom(alignment: String)
POST /v1/api/personalities      controllers.PersonalityController.create()
POST /v1/api/personalities/bulk controllers.PersonalityController.createBulk()

# background
GET /v1/api/backgrounds/random/:race/:intelligence controllers.BackgroundController.getRandom(race: String, intelligence: String)
GET /v1/api/backgrounds/attributes controllers.BackgroundController.getAttributes(characterClass: Option[String], heroic: Boolean)


# region ui routing
GET     /regions                controllers.RegionController.getRegionsPage(campaign: Option[String], name: Option[String])
GET     /regions/list           controllers.RegionController.getListPage(campaign: Option[String])
GET     /regions/create         controllers.RegionController.createRegionPage()
POST    /regions/create         controllers.RegionController.createRegion()
GET     /regions/update/:id     controllers.RegionController.updateRegionPage(id: String)
GET     /regions/view/:id       controllers.RegionController.viewRegionPage(id: String)
POST    /regions/update         controllers.RegionController.updateRegion()

# region api routing
GET     /v1/api/regions         controllers.RegionController.get(campaign: Option[String], name: Option[String])
GET     /v1/api/regions/list    controllers.RegionController.list()
POST    /v1/api/regions         controllers.RegionController.create()
PUT     /v1/api/regions/:id     controllers.RegionController.update(id: String)
DELETE  /v1/api/regions/:id     controllers.RegionController.delete(id: String)